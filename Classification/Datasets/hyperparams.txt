'credit':,
'breast_cancer':,
'statlog':,
'adult':,
'yeast': ,
'thoracic':,
'seismic':,
'retinopathy': 

'credit': {'C': 0.1, 'random_state': 0},
'breast_cancer': {'C': 1.0, 'random_state': 0},
'statlog': {'C': 1.0, 'random_state': 0},
'adult': {'C': 0.1, 'random_state': 0},
'yeast': {'C': 0.1, 'random_state': 0},
'thoracic': {'C': 0.01, 'random_state': 0},
'seismic': {'C': 100, 'random_state': 0},
'retinopathy': {'C': 0.1, 'random_state': 0}

logreg
{'C': 0.001, 'random_state': 0}
{'C': 1.0, 'random_state': 0}
{'C': 1.0, 'random_state': 0}
{'C': 0.1, 'random_state': 0}
{'C': 0.1, 'random_state': 0}
{'C': 0.01, 'random_state': 0}
{'C': 100, 'random_state': 0}
{'C': 0.1, 'random_state': 0}

'credit':{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0},
'breast_cancer':{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0},
'statlog':{'max_depth': 5, 'min_samples_split': 10, 'random_state': 0},
'adult':{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0},
'yeast': {'max_depth': 5, 'min_samples_split': 10, 'random_state': 0},
'thoracic':{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0},
'seismic':{'max_depth': 5, 'min_samples_split': 10, 'random_state': 0},
'retinopathy':{'max_depth': 10, 'min_samples_split': 5, 'random_state': 0} 

tree
{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0}
{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0}
{'max_depth': 5, 'min_samples_split': 10, 'random_state': 0}
{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0}
{'max_depth': 5, 'min_samples_split': 10, 'random_state': 0}
{'max_depth': 5, 'min_samples_split': 2, 'random_state': 0}
{'max_depth': 5, 'min_samples_split': 10, 'random_state': 0}
{'max_depth': 10, 'min_samples_split': 5, 'random_state': 0}

'credit':{'leaf_size': 1, 'n_neighbors': 30, 'p': 2},
'breast_cancer':{'leaf_size': 1, 'n_neighbors': 10, 'p': 2},
'statlog':{'leaf_size': 1, 'n_neighbors': 20, 'p': 2},
'adult':{'leaf_size': 1, 'n_neighbors': 10, 'p': 1},
'yeast': {'leaf_size': 1, 'n_neighbors': 10, 'p': 1},
'thoracic':{'leaf_size': 1, 'n_neighbors': 10, 'p': 1},
'seismic':{'leaf_size': 1, 'n_neighbors': 30, 'p': 1},
'retinopathy':{'leaf_size': 1, 'n_neighbors': 20, 'p': 1}

kneighbours
{'leaf_size': 1, 'n_neighbors': 30, 'p': 2}
{'leaf_size': 1, 'n_neighbors': 10, 'p': 2}
{'leaf_size': 1, 'n_neighbors': 20, 'p': 2}
{'leaf_size': 1, 'n_neighbors': 10, 'p': 1}
{'leaf_size': 1, 'n_neighbors': 10, 'p': 1}
{'leaf_size': 1, 'n_neighbors': 30, 'p': 1}
{'leaf_size': 1, 'n_neighbors': 20, 'p': 1}

'credit':{'learning_rate': 0.0001, 'n_estimators': 10},
'breast_cancer':{'learning_rate': 0.1, 'n_estimators': 50},
'statlog':{'learning_rate': 0.1, 'n_estimators': 500},
'adult':{'learning_rate': 0.1, 'n_estimators': 10},
'yeast':{'learning_rate': 1.0, 'n_estimators': 10},
'thoracic':{'learning_rate': 0.01, 'n_estimators': 500},
'seismic':{'learning_rate': 0.0001, 'n_estimators': 10},
'retinopathy':{'learning_rate': 0.1, 'n_estimators': 500}

adaboost
{'learning_rate': 0.0001, 'n_estimators': 10}
{'learning_rate': 0.1, 'n_estimators': 50}
{'learning_rate': 0.1, 'n_estimators': 500}
{'learning_rate': 1.0, 'n_estimators': 10}
{'learning_rate': 0.01, 'n_estimators': 500}
{'learning_rate': 0.0001, 'n_estimators': 10}
{'learning_rate': 0.1, 'n_estimators': 500}

'credit':{'C': 1.0, 'kernel': 'rbf'},
'breast_cancer':{'C': 1.0, 'kernel': 'rbf'},
'statlog':{'C': 1.0, 'kernel': 'rbf'},
'adult':{'C': 1.0, 'kernel': 'rbf'},
'yeast':{'C': 1.0, 'kernel': 'rbf'},
'thoracic':{'C': 1.0, 'kernel': 'rbf'},
'seismic':{'C': 1.0, 'kernel': 'rbf'},
'retinopathy':{'C': 1.0, 'kernel': 'rbf'} 

svc
{'C': 1.0, 'kernel': 'rbf'}
{'C': 1.0, 'kernel': 'rbf'}
{'C': 1.0, 'kernel': 'rbf'}
{'C': 1.0, 'kernel': 'rbf'}
{'C': 1.0, 'kernel': 'rbf'}
{'C': 1.0, 'kernel': 'rbf'}
{'C': 1.0, 'kernel': 'rbf'}
{'C': 1.0, 'kernel': 'rbf'}


'credit':{'max_depth': 10, 'min_samples_split': 2},
'breast_cancer':{'max_depth': 10, 'min_samples_split': 10},
'statlog':{'max_depth': 50, 'min_samples_split': 2},
'adult':{'max_depth': 20, 'min_samples_split': 5},
'yeast': {'max_depth': 10, 'min_samples_split': 5},
'thoracic':{'max_depth': 5, 'min_samples_split': 2},
'seismic':{'max_depth': 10, 'min_samples_split': 5},
'retinopathy':{'max_depth': 20, 'min_samples_split': 2}

forest
{'max_depth': 10, 'min_samples_split': 2}
{'max_depth': 10, 'min_samples_split': 10}
{'max_depth': 50, 'min_samples_split': 2}
{'max_depth': 10, 'min_samples_split': 5}
{'max_depth': 5, 'min_samples_split': 2}
{'max_depth': 10, 'min_samples_split': 5}
{'max_depth': 20, 'min_samples_split': 2}


'credit':{'activation': 'relu', 'hidden_layer_sizes': (100,), 'max_iter': 500},
'breast_cancer':{'activation': 'relu', 'hidden_layer_sizes': (100,), 'max_iter': 500},
'statlog':{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500},
'adult':{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500},
'yeast': {'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500},
'thoracic':{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500},
'seismic':{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500},
'retinopathy': {'activation': 'tanh', 'hidden_layer_sizes': (50, 50, 50), 'max_iter': 500}

neural
{'activation': 'relu', 'hidden_layer_sizes': (100,), 'max_iter': 500}
{'activation': 'relu', 'hidden_layer_sizes': (100,), 'max_iter': 500}
{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500}
{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500}
{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500}
{'activation': 'tanh', 'hidden_layer_sizes': (100,), 'max_iter': 500}
{'activation': 'tanh', 'hidden_layer_sizes': (50, 50, 50), 'max_iter': 500}

https://towardsdatascience.com/hyperparameter-tuning-the-random-forest-in-python-using-scikit-learn-28d2aa77dd74
https://datascience.stackexchange.com/questions/36049/how-to-adjust-the-hyperparameters-of-mlp-classifier-to-get-more-perfect-performa
https://machinelearningmastery.com/cost-sensitive-learning-for-imbalanced-classification/

https://machinelearningmastery.com/cost-sensitive-logistic-regression/
	A best practice for using the class weighting is to use the inverse of the class distribution present in the training dataset.